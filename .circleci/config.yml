version: 2.1
jobs:
  build_and_test:
    docker:
      - image: docker:18.09
    steps:
      - add_ssh_keys:
          fingerprints:
            - "60:59:74:11:08:94:2e:c3:d2:5e:6b:03:17:1a:f8:8a"
      - run: apk add --no-cache --no-progress make git openssh
      - run:
          name: Keyscan Github (HACK) #https://discuss.circleci.com/t/known-hosts-in-circle-2-0/18544
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - checkout
      - setup_remote_docker
      - run: make light full
  nix_build:
    docker:
      - image: nixos/nix
    steps:
      - checkout
      - restore_cache:
          key: nix-store
      - run: nix-build
      - save_cache:
          key: nix-store
          when: always
          paths:
            - /nix
  build_test_and_deploy:
    docker:
      - image: docker:18.09
    steps:
      - add_ssh_keys:
          fingerprints:
            - "60:59:74:11:08:94:2e:c3:d2:5e:6b:03:17:1a:f8:8a"
      - run: apk add --no-cache --no-progress make git openssh
      - run:
          name: Keyscan Github (HACK) #https://discuss.circleci.com/t/known-hosts-in-circle-2-0/18544
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - checkout
      - setup_remote_docker
      - run: >-
          echo "$DOCKER_PASSWORD" |
            docker login --username "$DOCKER_USERNAME" --password-stdin
      - run: apk add --no-cache --no-progress make
      - run: make deploy
      - run: |
          git tag "circleci_pipeline_<< pipeline.number >>_build_${CIRCLE_BUILD_NUM}"
          git push -v origin "circleci_pipeline_<< pipeline.number >>_build_${CIRCLE_BUILD_NUM}:circleci_pipeline_<< pipeline.number >>_build_${CIRCLE_BUILD_NUM}"
  release:
    docker:
      - image: ubuntu:19.04
    steps:
      - add_ssh_keys:
          fingerprints:
            - "60:59:74:11:08:94:2e:c3:d2:5e:6b:03:17:1a:f8:8a"
      - run: apk add --no-cache --no-progress make git openssh
      - run:
          name: Keyscan Github (HACK) #https://discuss.circleci.com/t/known-hosts-in-circle-2-0/18544
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - checkout
      - run: |
          export DEBIAN_FRONTEND=noninteractive
          apt update
          apt install -y curl docker gcc git jq make python3 rpm snapcraft wget
      - run: curl -fsSL https://get.docker.com -o /tmp/get-docker.sh
      - run: sh /tmp/get-docker.sh
      - run: |
          cd /tmp
          wget -nv https://dl.google.com/go/go1.11.11.linux-amd64.tar.gz
          tar -C /usr/local -xzf go1.11.11.linux-amd64.tar.gz
      - setup_remote_docker
      - run: >-
          echo "$DOCKER_PASSWORD" |
            docker login --username "$DOCKER_USERNAME" --password-stdin
      - run: >-
          snapcraft login --with <(
            echo "$SNAPCRAFT_LOGIN_FILE" |
              base64 --decode --ignore-garbage)
      # Build the UPM binary outside of Docker because that will
      # trigger building its dependencies (e.g. statik) which
      # goreleaser won't realize is needed otherwise. *Don't* build
      # the Docker images here (even though this would improve logging
      # output) because goreleaser needs to pass the version it's
      # using as a Dockerfile build argument.
      - run: |
          export PATH="/usr/local/go/bin:$PATH"
          make upm
      - run: curl -sL https://git.io/goreleaser > /tmp/goreleaser
      - run: chmod +x /tmp/goreleaser
      - run: |
          export PATH="/usr/local/go/bin:$PATH"
          /tmp/goreleaser --release-notes=<(scripts/extract-changelog.py)
      - run: scripts/upload-snap.bash
workflows:
  version: 2
  ci:
    jobs:
      - build_and_test:
          filters:
            branches:
              ignore: master
            tags:
              ignore: /.*/
      - nix_build:
          filters:
            branches:
              ignore: master
            tags:
              ignore: /.*/
      - build_test_and_deploy:
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
          context: "Docker Hub"
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
          context: "UPM"
