---
version: v1.0
name: UPM
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004

global_job_config:
  prologue:
    commands:
      - checkout
      - git switch --detach

blocks:
  - name: setup
    dependencies: []
    task:
      jobs:
        - name: cache nix installer
          commands:
            - >-
              cache has_key nix-installer || (
              curl
              --proto '=https'
              -o nix-installer
              --tlsv1.2 -sSf -L
              https://github.com/DeterminateSystems/nix-installer/releases/download/v0.7.0/nix-installer-x86_64-linux
              && chmod +x ./nix-installer
              && cache store nix-installer ./nix-installer
              )
        - name: cache goreleaser
          commands:
            - >-
              cache has_key goreleaser || (
              curl
              --proto '=https'
              -o goreleaser
              -sL https://git.io/goreleaser
              && chmod +x ./goreleaser
              && cache store goreleaser ./goreleaser
              )

  - name: build
    dependencies: [setup]
    task:
      prologue:
        commands:
          - cache restore nix-installer
          - sudo ./nix-installer install linux --no-confirm --logger compact
          - . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
      jobs:
        - name: nix build
          commands:
            - cache restore nix-store
            - nix build
            - ./result/bin/upm --version
            - cache store nix-store /nix
        - name: gorelease build
          commands:
            - cache restore goreleaser
            - make upm
            - ./goreleaser --release-notes=<(scripts/extract-changelog.py)
            - cache store dist ./dist
        - name: docker
          commands:
            - make light full

  - name: release
    dependencies: [ setup, build ]
    run:
      # git tag can be eg 'v1.0', 'v1.0.1', 'v1.0-alpha', or 'v1.0-alpha-4'
      when: "tag =~ 'v[0-9]+\.[0-9]+(\.[0-9]+)?(-.*)*'"
    task:
      jobs:
        - name: gorelease
          commands:
            - >-
              snapcraft login --with <(
                echo "$SNAPCRAFT_LOGIN_FILE" |
                base64 --decode --ignore-garbage
              )
            - make upm
            - cache restore goreleaser
            - ./goreleaser --release-notes=<(scripts/extract-changelog.py)
            - scripts/upload-snap.bash
        # - name: deploy
        #   commands:
        #     - >-
        #       echo "$DOCKER_PASSWORD" |
        #         docker login
        #         --username "$DOCKER_USERNAME"
        #         --password-stdin
        #     - make deploy
        #     - |
        #       git tag "semaphoreci_pipeline_"
